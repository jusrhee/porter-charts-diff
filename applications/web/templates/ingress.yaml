{{- $fullName := include "docker-template.fullname" . -}}
{{- $svcPort := .Values.service.port -}}
{{- $environment := print .Values.datadog.env | replace "demo" "int" | replace "preview" "dev"}}
{{- $allHosts := .Values.ingress.hosts -}}
{{- if .Values.ingress.enabled -}}
{{- $certName := printf "%s-%s" .Release.Namespace $fullName -}}
{{- $certNameSecret := printf "%s-%s" $certName "tls" -}}
{{- if not .Values.ingress.existingCertSecret -}}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ $certName }}
  namespace: istio-ingress
spec:
  dnsNames:
    {{- range $allHosts }}
    - {{ . | quote }}
    {{- end }}
  issuerRef:
    group: cert-manager.io
    kind: ClusterIssuer
    name: {{ .Values.certIssuer }}
  secretName: {{ $certNameSecret }}
  usages:
    - digital signature
    - key encipherment
{{ end }}
{{- if not .Values.ingress.existingGateway -}}
---
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: {{ $fullName }}
spec:
  selector:
    app: istio-ingressgateway
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        {{- range $allHosts }}
        - {{ . | quote }}
        {{- end }}
      tls:
        httpsRedirect: true
    - port:
        number: 443
        name: https
        protocol: HTTPS
      hosts:
        {{- range $allHosts }}
        - {{ . | quote }}
        {{- end }}
      tls:
        mode: SIMPLE
        credentialName: {{ .Values.ingress.existingCertSecret | default $certNameSecret }}
{{ end }}
{{ end }}
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: {{ $fullName }}
spec:
  hosts:
    - {{ $fullName }}.{{ .Release.Namespace }}.svc.cluster.local
{{- if .Values.ingress.enabled -}}
    {{- range $allHosts }}
    - {{ . | quote }}
    {{- end }}
{{- end }}
  gateways:
{{- if .Values.ingress.enabled }}
    - {{ .Values.ingress.existingGateway | default $fullName }}
{{- end }}
    - mesh
  http:
  - match:
    - uri:
        prefix: /sidekiq/
    - uri:
        exact: /sidekiq
{{- if ((.Values.sidekiq).ui).enabled }}
    redirect:
      authority: {{ $fullName }}-{{ .Release.Namespace }}.sidekiq-ui.{{ $environment }}.carerev.cloud
{{- else }}
    directResponse:
      status: 404
{{- end }}
{{- if .Values.ingress.maintenance.enabled }}
  - timeout: 30s
    rewrite:
      authority: maintenance.{{ $environment }}.carerev.com
    route:
    - destination:
        host: maintenance.{{ $environment }}.carerev.com
        port:
          number: 443
{{- else }}
{{- if .Values.istio.additionalHttpMatchers }}
{{- toYaml .Values.istio.additionalHttpMatchers | nindent 2 }}
{{- end }}
  - timeout: {{ .Values.httpTimeout | default "30s" }}
    headers:
{{- .Values.ingress.defaultHeaders | toYaml | nindent 8 }}
    match:
    - uri:
        prefix: /
    route:
    - destination:
        host: {{ $fullName }}
        port:
          number: {{ $svcPort }}
{{- end }}
{{- if ((.Values.sidekiq).ui).enabled }}
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: {{ $fullName }}-sidekiq-ui
spec:
  hosts:
  - {{ $fullName }}-{{ .Release.Namespace }}.sidekiq-ui.{{ $environment }}.carerev.cloud
  gateways:
  - sidekiq/sidekiq-ui
  http:
  - match:
    - uri:
        prefix: /sidekiq/
    - uri:
        exact: /sidekiq
    route:
    - destination:
        host: {{ $fullName }}
        port:
          number: {{ $svcPort }}
{{- end }}
